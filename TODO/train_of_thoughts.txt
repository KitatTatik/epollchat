Чат
---

(нормальный такой олдскульный, как унечский чат
тот был кажется phpchat?)


клиент:
регистрация
авторизация
сообщение в общий чат
сообщение в приват
просмотр лога чата
выход

сервер:
регистрация клиента
впуск клиента (проверка логина-пароля, оповещение остальным о входе)
поддержка списка клиентов онлайн
публикация сообщений клиента в чат
пересылка сообщений в приват
ведение лога
выдача лога клиенту
контроль выхода клиента

_______________________________________________

сокеты:
на клиенте - ровно два сокета, стдин и сервер. Парсинг - с сервера, форматирование мессаджа - со стдина. Все вроде легко.

_______________________________________________

сервер: сокеты клиентов (соответствие дескрипторов, открытие/закрытие по входу-выходу). С каждого такого сокета пришедший пакет подвергается
парсингу, затем, в зависимости от типа пакета (команды) -
впуск-выпуск (закрытие сокета после выпуска)
выдача лога
публикация тела мессаджа в чат, в лог
_  "  -- " ------------- в приват

отдельно сокет сигналов, с ним вроде ничего не происходит
_______________________________________________

регистрация-авторизация
поддержка какой то БД, не умирающей при выключении сервера? файл например, хоть текстовый
и такой же файл, неумирающий, нужен для лога.
шифрование пароля? хеш типа
( от хеша в маленьком чате не нужна никакая сериализация, 
только сохранение ключа, сопоставленного паролю. Что само по себе большое счастье)
вариант вместо пароля - генерация случайного токена на стороне сервера, 
запись его в БД и отсылка клиенту в качестве пароля. Ибо нефиг. И никакого "забыл пароль?" тут не будет,
забыл пароль - иди лесом. 
(Или уж тогда заморачиваться и с контейнером и с (де)сериализацией, но умнее было бы это на С++ делать).
или вообще нафиг шифрование паролей - во всяком случае, это можно сделать потом отдельно, если и потребует какой-то переделки на клиентской стороне,
то самой минимальной.
 
то есть, коннект клиент-сервер не подразумевает сразу впуска в чат, должно быть какое-то предварительное чистилище еще.
(можно наверное одно окно с меню ncurses - sign in sign up и потом на успешном впуске старое окно убить и перерисовать окно чата без меню, с панелями самого чата)

путь к файлу от рута? типа /home/Tatik/share/mychat/bd.txt

сокет, пишущий в бд и в лог (просто  файл) 

(FILE *f = fopen(logFilePath, "a"); //a - потому что append
fprintf(f, time, "Nickname:%s says: %s\n", namefd, msgs);
fclose(f))

кстати file*f - это пойнтер, а дескриптор - int. Вообще говоря, мне пойнтер то и не нужен, наверняка же как-то можно прямо по имени открывать, возвращая
не пойнтер, а дескриптор. 
Ну или (потому что непонятно, как там с аппендом) как-то получать дескриптор из пойнтера.


сокет, пишущий в БД (регистрация авторизация и тп.).
Файл лога вероятно имеет смысл открывать сразу после запуска сервера и закрывать при убийстве демона ( ну или по входу первого клиента, выходу последнего, что логичнее, но больше возни).
Собственно, то же самое проще всего сделать и с БД, но не очень-то честно - она нужна в редкие моменты авторизации нового клиента.

_________________________________________________________  
протокол

мессадж: метка старта, длина, разделитель, версия, разделитель, команда, разделитель, автор, разделитель, адресат, разделитель, тело сообщения, разделитель, метка финала

клиент отправка: автор подставляется самотеком
адресат чат - если сообщение для всех
сервер - если регистрация, вход, выход, лог
юзер онлайн - если приват

(можно мессаджи разбить на два класса - внешние типа регистрация авторизация и те что изнутри чата - чат приват лог выход.
а можно и не разбивать, а натолкать команд в один побольше)

клиент получение: только парсинг? кажется да
__________________________________________________________
сервер отправка: автор (по номеру сокета? ( где то еще не забыть про ник! (сопоставление списка ников и номеров сокетов, вот где бы вектор пар пригодился... стоит структуру написать))), адресат другой сокет, если приват\\тот же сокет, если подтверждение команды \\ все остальные сокеты, если сообщение в чат
и копия в лог (всего, кроме приватов, в том числе входа и выхода) - и время мессаджа надо в логе указывать, во всех чатах так делали))

char* get_time () {
   time_t rawtime;
   struct tm *info;  // библиотечный тип
   time( &rawtime );
   info = localtime( &rawtime );
   printf("Current local time and date: %s", asctime(info));
   return(asctime(info);
}

примерно так, не забыть time.h include))

__________________________________________

собственно парсинг
найти метку старта, прочесть версию, разделитель... и тп, до метки финиша
или найти сначала метки старта и финиша и вычислить длину? есть смысл, если и при формировании мессаджа ее вычислять и передавать в самой строке мессаджа, тогда можно сравнить и оповестить о фейле, в случае чего
(и что?)

найти команду и параметр при ней ( например - post, chat... тут вопрос что считать командой, например, адресата можно считать параметром команды,
а можно отдельным полем в мессадже, стоит прикинуть, что короче и проще)

версия где-то в сервере ( а может и в клиенте) сопоставляется списку команд
если версия отличается, то наличие незнакомой команды может не быть ошибкой, ее надо просто пропустить
(например? например, возможность просмотра лога)

__________________________________________________
кстати о логе, его имеет смысл открывать на отдельном экране (если это можно вообще без потери основного экрана? можно вроде в ncurses сделать поверхную панель)? или выделять под него отдельное окно? с полосой, например в самом низу - это глупо, потому что лог нужен редко и не всем, зато проще, вероятно. Хотя его чистить тоже надо...
Или не чистить, а разметить экран под него, а когда нужен/не нужен лог просто вызывать/убивать окно целиком.
Здесь разница в том, что вызов лога - это команда серверу, то есть, обычный мессадж под формирование клиентом и парсинг сервером,
а убийство лога - чисто закрытие окна на стороне клиента.
(в окно передается кусок файла на момент запроса, дальше лог идет сам по себе, а текст в окне уже не меняется. "Обновить " - лесом, прекрасно можно убить и заново запросить вместо этого.
еще о логе - кусок от файла имеет смысл отрезать по времени (например, лог за последние два часа)

Эникейз, лог можно потом добавить, оно мало влияет на общую структуру.
Здесь как раз удобно будет попробовать версионирование - сначала сделать обновленного клиента, который умеет просить и смотреть лог, и убедиться, что сервер (еще без лога) умеет эту команду корректно игнрорировать.

___________________________________________________

Приват? связываться ли вообще с приватом? иф да, открывать ли для него отдельную панель или просто писать в общую полосу с пометкой приват от...

и конечно сама исходящая строка клиента - ее удобнее бы формировать с помощью мыша и кнопок))
типа "view log" , "exit", которые сами и отсылают запрос серверу - это удобно кнопками
а мышом хорошо выбирать клиента из списка участников для привата... но это уж совсем лень - тогда нужен не список их на левой панели столбиком, 
а в какую-то форматную таблицу их писать, что ли, и прописывать поведение мыша по клику на нужную клетку ( еще умеет ли такое ncurses? да скорее всего,
это я не умею))

в общем, ужас что, начать и кончить.
